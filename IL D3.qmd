---
title: "MappingIL14"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

To start with, load the packages we need.

```{r chunk01, results='hide'}
library(sf)
library(dplyr)
library(ggplot2)
```

Define the common directory where we'll save local copies of the things we might want to use in other notebooks.

```{r chunk02}
my_data_dir <- "C:/Users/ashli/OneDrive/Desktop/School Stuff/IIT/_Fall2024/CS 579 Online Social Network Analysis"
if (!dir.exists(my_data_dir)) dir.create(my_data_dir, recursive = TRUE)
tools::file_path_as_absolute(my_data_dir)

```

Load the shapefile with the Illinois Congressional district boundaries that we downloaded from redistrictingdatahub.org

```{r chunk03, cache = TRUE}
il_congdst_sf <- sf::st_read("C:/Users/ashli/OneDrive/Desktop/School Stuff/IIT/_Fall2024/CS 579 Online Social Network Analysis/HB1291.shp")

nrow(il_congdst_sf)
head(il_congdst_sf)
```

Given that we know that Illinois currently has 17 districts, this appears to be consistent.

Let's plot the district boundaries using the geometries we just loaded from the shapefile

```{r chunk04, cache = TRUE}
ggplot(il_congdst_sf) + 
  geom_sf() + 
  labs(title = "Illinois Congressional Districts, 2021")

```

Let's pull the IL-14 district geometries

```{r chunk05, cache = TRUE}
il3 <- dplyr::filter(il_congdst_sf, DISTRICT == 3)

```

Let's plot IL-14

```{r chunk06, cache = TRUE}
ggplot(il3) + 
  geom_sf() + 
  labs(title = "Illinois Congressional District 3")

```

We are interested in the precinct boundaries. Now load the shapefile with the Illinois precinct boundaries that we downloaded from redistrictingdatahub.org

```{r chunk07, cache = TRUE}
il_prec_2022_sf <- sf::st_read("C:/Users/ashli/OneDrive/Desktop/School Stuff/IIT/_Fall2024/CS 579 Online Social Network Analysis/il_2022_gen_cong_prec/il_2022_gen_cong_prec.shp")

nrow(il_prec_2022_sf)
head(il_prec_2022_sf)

```

Let's look at all the column names in this table to see what's in the table

```{r chunk08, cache = TRUE}

names(il_prec_2022_sf)

```

From the README.txt, here is how the field/column names are coded:

## Notes on Field Names (adapted from VEST):

Columns reporting votes generally follow the pattern: One example is: G16PREDCLI The first character is G for a general election, P for a primary, S for a special, and R for a runoff. Characters 2 and 3 are the year of the election.\* Characters 4-6 represent the office type (see list below). Character 7 represents the party of the candidate. Characters 8-10 are the first three letters of the candidate's last name.

\*To fit within the GIS 10 character limit for field names, the naming convention is slightly different for the State Legislature and US House of Representatives. All fields are listed below with definitions.

Office Codes Used: A - Amendment ATG - Attorney General COM - Comptroller CON## - United States Congress GOV - Governor and Lieutenant Governor SC# - Supreme Court Seat \# (both elections and retention) SL### - State House SOS - Secretary of State TRE - Treasurer SU## - State Senate USS - United States Senator

Party Codes Used: D - Democratic I - Independent L - Libertarian Party O - Other / Write In R - Republican W - Working Class Party

## Fields:

Field Name Description UNIQUE_ID State FIP Value COUNYFP County FIP Value County County Name Precinct Precinct Name CONG_DIST Congressional District

```{r chunk09, cache = TRUE}
il3_prec <- dplyr::filter(il_prec_2022_sf, CONG_DIST == "03")
head(il3_prec)
```

```{r chunk10, cache = TRUE}
il3_prec_sel <- il3_prec %>% select(UNIQUE_ID,
                                      COUNTYFP,
                                      County,
                                      Precinct,
                                      CONG_DIST,
                                      GCON03DRAM,
                                      GCON03RBUR,
                                      geometry)
head(il3_prec_sel)

```

```{r chunk11, cache = TRUE}
ggplot(il3_prec_sel) + 
  geom_sf() + 
  geom_sf(data = il3, fill = NA, lwd = 1.2) +
  labs(title = "Precincts in Illinois Congressional District 3")

```

This map does appear to have some precincts that extend outside of the IL-14 Congressional district boundary. This needs further investigation.

From the README.txt: Certain precincts are split by congressional or legislative districts and have votes for more than one district. These precincts are split by the district geographies. In certain cases, votes appear in precincts for districts that do not intersect with the precinct itself. In the split precinct files, these votes are "lost" and not included in the resulting file. For the SLDL file, 49 votes were lost, for the SLDU file, 44 votes were lost and for the congressional file, 29 votes were lost. The geographies of these precincts with lost votes were double-checked to ensure it was not a processing error on our end.

The above confirms that precincts can be split by congressional districts so the map reflects this.

```{r chunk12, cache = TRUE}
il3_prec_win <- il3_prec_sel %>% mutate(
  Winner = case_when (
    GCON03DRAM > GCON03RBUR ~ "D",
    GCON03DRAM < GCON03RBUR ~ "R",
    TRUE ~ "T") )

head(il3_prec_win)

```

We have a few ties. One with no votes that might need investigation and another with each side getting 125 votes.

Lets maps the winners

```{r chunk13, cache = TRUE}
ggplot(il3_prec_win, aes(color = Winner)) + 
  geom_sf() + 
  scale_color_manual(values = c("D" = "blue",
                                "R" = "red",
                                "T" = "green"))
  


```

```{r chunk14, cache = TRUE}
ggplot(il3_prec_win, aes(fill = Winner)) + 
  geom_sf() 

```

```{r chunk15, cache = TRUE}
ggplot(il3_prec_win, aes(fill = Winner)) + 
  geom_sf() + 
  scale_fill_manual(values = c("D" = "blue",
                                "R" = "red",
                                "T" = "green"))


```

```{r chunk16, cache = TRUE}
ggplot(il3_prec_win, aes(fill = Winner, color = "white")) + 
  geom_sf() + 
  scale_fill_manual(values = c("D" = "blue",
                                "R" = "red",
                                "T" = "green"))
  

```

```{r chunk16, cache = TRUE}
ggplot(il3_prec_win, aes(fill = Winner)) + 
  geom_sf() + 
  scale_fill_manual(values = c("D" = "blue",
                                "R" = "red",
                                "T" = "green"))+
  geom_sf(data = il3, fill = NA, lwd = 0.8) +
  labs(title = "2022 IL Cong District 3 Election Results by Precinct")
```

```{r chunk17 cache=TRUE}
totalDvotes <- sum(il3_prec_win$GCON03DRAM) 
totalRvotes <- sum(il3_prec_win$GCON03RBUR)

cat(totalDvotes, "votes for the Democrat\n")
cat(totalRvotes, "votes for the Republican\n")


```

```{r chunk 18}
library(readr)
```

```{r}
# View the dimensions and structure of the dataset
dim(il_prec_data_tbl)
head(il_prec_data_tbl)

```

```{r chunk19}
il_prec_data_tbl <- readr::read_csv("C:\\Users\\ashli\\OneDrive\\Desktop\\School Stuff\\IIT\\_Fall2024\\CS 579 Online Social Network Analysis\\CSV\\il_2022_gen_prec.csv",
                             col_select = c(
                               UNIQUE_ID,
                               COUNTYFP,
                               County,
                               Precinct,
                               G22USSDDUC,
                      
                               G22USSRSAL),
                             show_col_types = FALSE)


dim(il_prec_data_tbl)
il_prec_data_tbl |> head()
```

```{r chunk20}
il_prec_win_sen <- il3_prec_win |> 
  left_join(il_prec_data_tbl, by = c("UNIQUE_ID" )) |> 
  select(UNIQUE_ID,
         starts_with("G"))
il_prec_win_sen
```

```{r chunk21, cache = TRUE}
il3_prec_cong_sen_win <- il_prec_win_sen %>% mutate(
  CWinner = case_when (
    GCON03DRAM > GCON03RBUR ~ "D",
    GCON03DRAM < GCON03RBUR ~ "R",
    TRUE ~ "T"), SWinner = case_when (
      G22USSDDUC > G22USSRSAL ~ "D",
      G22USSDDUC < G22USSRSAL ~ "R",
      TRUE ~ "T") )

head(il3_prec_cong_sen_win)
```

```{r chunk22, cache = TRUE}

install.packages("patchwork")
library(patchwork)




g1 <- ggplot(il3_prec_cong_sen_win, aes(fill = CWinner)) + 
  geom_sf() + 
  scale_fill_manual(values = c("D" = "blue",
                                "R" = "red",
                                "T" = "green"))+
  geom_sf(data = il3, fill = NA, lwd = 0.8) +
  labs(title = "2022 IL3 Cong Election by Precinct")+
  theme_void()

g2 <- ggplot(il3_prec_cong_sen_win, aes(fill = SWinner)) + 
  geom_sf() + 
  scale_fill_manual(values = c("D" = "blue",
                                "R" = "red",
                                "T" = "green"))+
  geom_sf(data = il3, fill = NA, lwd = 0.8) +
  labs(title = "2022 IL3 Senate Election by Precinct")+
  theme_void()

## Display them side-by-side
g1 | g2
```

```{r chunk23 cache=TRUE}
totalCDvotes <- sum(il3_prec_cong_sen_win$GCON03DRAM)

totalCRvotes <- sum(il3_prec_cong_sen_win$GCON03RBUR)

totalSDvotes <- sum(il3_prec_cong_sen_win$G22USSDDUC, na.rm = TRUE)
totalSRvotes <- sum(il3_prec_cong_sen_win$G22USSRSAL, na.rm = TRUE)

cat(totalCDvotes, "votes for the Democratic IL-3 Congressional District Candidate\n")
cat(totalCRvotes, "votes for the Republican IL-3 Congressional District Candidate\n")

cat(totalSDvotes, "votes for the Democratic Candidate for Senate\n")
cat(totalSRvotes, "votes for the Republican Candidate for Senate\n")

totalCvotes <- totalCDvotes + totalCRvotes 
cat(totalCvotes, "total votes for IL-3 Congressional Representative\n")
totalSvotes <- totalSDvotes + totalSRvotes 
cat(totalSvotes, "total votes IL Senator")
```

```{r chunk 23, cache=TRUE}
il3_prec_winper <- il3_prec_win %>% mutate(
  Dper = GCON03DRAM/(GCON03DRAM+GCON03RBUR),
  Rper = GCON03RBUR/(GCON03DRAM+GCON03RBUR)
     )
il3_prec_winper[["Dper"]][is.nan(il3_prec_winper[["Dper"]])] <- 0
il3_prec_winper[["Rper"]][is.nan(il3_prec_winper[["Rper"]])] <- 0
```

```{r chunk24, cache=TRUE}
g3 = ggplot(il3_prec_winper, aes(fill = Dper)) +
  geom_sf() +
  scale_fill_distiller(palette = "Blues", direction = 1) +
  labs(title = "Fraction of votes for the Democrat", 
       subtitle = "IL Cong District 3 2022",
       fill = "Fraction") +
  theme_void()

g4 = ggplot(il3_prec_winper, aes(fill = Rper)) +
  geom_sf() +
  scale_fill_distiller(palette = "Reds", direction = 1) +
  labs(title = "Fraction of votes for the Republican", 
       subtitle = "IL Cong District 3 2022",
       fill = "Fraction") +
  theme_void()

g3|g4
```

```{r chunk23, cache = TRUE}
il_prec_2020_sf <- sf::st_read("C:/Users/ashli/OneDrive/Desktop/School Stuff/IIT/_Fall2024/CS 579 Online Social Network Analysis/il_vest_20/il_vest_20.shp")


nrow(il_prec_2020_sf)
head(il_prec_2020_sf)
```

```{r chunk24, cache = TRUE}

# Count the number of features
feature_count <- nrow(il_congdst_sf)

# Get the names of the columns (attributes) in the shapefile
attribute_names <- colnames(il_congdst_sf)

# Print the results
cat("Number of features:", feature_count, "\n")
cat("Attribute names:", paste(attribute_names, collapse = ", "), "\n")

```

\`\`\`{r chunk24, cache = TRUE}

```{r}
# File paths (adjust as needed)
districts_shp <- "C:/Users/ashli/OneDrive/Desktop/School Stuff/IIT/_Fall2024/CS 579 Online Social Network Analysis/HB1291.shp"
cong_prec_shp <- "C:/Users/ashli/OneDrive/Desktop/School Stuff/IIT/_Fall2024/CS 579 Online Social Network Analysis/il_2022_gen_cong_prec/il_2022_gen_cong_prec.shp"
precincts_shp <- "C:/Users/ashli/OneDrive/Desktop/School Stuff/IIT/_Fall2024/CS 579 Online Social Network Analysis/Precinct/Precinct_2020/il_2020.shp"
income_shp <- "C:/Users/ashli/OneDrive/Desktop/School Stuff/IIT/_Fall2024/CS 579 Online Social Network Analysis/il_inc_2022_bg/il_inc_2022_bg.shp"

# Load shapefiles
districts <- st_read(districts_shp)
cong_prec <- st_read(cong_prec_shp)
precincts <- st_read(precincts_shp)
income <- st_read(income_shp)


```

```{r}

# Filter districts for District 3
district_3 <- districts %>% filter(DISTRICT == "03")

# Intersect precincts with District 3 boundaries
precincts_district_3 <- st_intersection(precincts, district_3)

# Intersect income data with District 3 boundaries
income_district_3 <- st_intersection(income, district_3)

```

```{r}
# Check column names
names(income_district_3)

# Or view the first few rows of the data
head(income_district_3)

```

```{r}
# Check CRS of both datasets
st_crs(district_3)
st_crs(income)

# If they are different, transform the income dataset to match District 3's CRS
income <- st_transform(income, st_crs(district_3))

```

```{r}


# Print the first few rows
head(district_3)

# Check the number of rows
nrow(district_3)


```

\
